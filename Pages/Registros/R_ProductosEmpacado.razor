@page "/R_ProductosEmpacado"
@page "/R_ProductosEmpacado/{Id:int}"
@inject IToastService toastService
<EditForm Model="entradasEmpacados" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div className="container">
        <div class="card align-items-center">
            <div class="card">
                <div class="card-header">
                    <h3>Entrada de Productos Empacados</h3>
                </div>
                <div class="card-body">
                    @*Id*@
                    <div class="form-row align-items-center">
                        <div class="col">
                            <div class="form-group">
                                <label> Id</label>
                                <div class="input-group">
                                    <InputNumber @bind-Value="entradasEmpacados.IdEmpacado" class="form-control" />
                                    <div>
                                        <button type="submit"
                                            class="btn btn-primary input-group-text oi oi-magnifying-glass"
                                            @onclick="Buscar">Buscar</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    @*Fecha de Caducidad*@
                    <div class="form-group">
                        <label>Fecha</label>
                        <input type="date" @bind-value="entradasEmpacados.Fecha" class="form-control" />
                    </div>
                    @*Concepto*@
                    <div class="form-group">
                        <label>Concepto</label>
                        <InputText class="form-control" @bind-Value="entradasEmpacados.Concepto" />
                    </div>
                </div>
                @*Utilizados*@
                <div class="card">
                    <div class="card-header">
                        <h3>Utilizados</h3>
                    </div>
                    <div class="card-body">
                        <div class="input-group d-flex align-items-end">
                            <div class="flex-fill mx-2">
                                <label>Producto</label>
                                <InputSelect @bind-Value="productos.ProductoId" class="form-control">

                                    @foreach (var item in lista)
                                    {

                                        <option value="@item.ProductoId">@item.Descripcion</option>
                                    }

                                </InputSelect>
                            </div>
                            <div class="flex-fill mx-2">
                                <label>Cantidad</label>
                                <InputNumber @bind-Value="entradasEmpacados.CantidadUtilizado" class="form-control" />
                            </div>
                            <div class="flex-fill mx-2">
                                <button type="button" class="btn btn-lg btn-primary oi oi-plus"
                                    @onclick="Agregar">Add</button>
                            </div>
                        </div>
                        <div>
                            <div class="flex-fill mx-2">
                                <table class="table table-bordered">
                                    <thead class="thead-darck">
                                        <tr class="table-info">
                                            <th>Producto Id</th>
                                            <th>Descripcion</th>
                                            <th>Cantidad</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Pasar)
                                        {
                                            @foreach (var item in lista)
                                            {

                                                <tr>
                                                    <td>@item.ProductoId</td>
                                                    <td>@item.Descripcion</td>
                                                    <td>@item.Existencia</td>
                                                    <td><span class="btn btn-sm btn-outline-primary oi oi-ban" href="#"
                                                    @onclick="@(() => RemoverFila(item))"> Remover</span> </td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                                <label>Peso Total</label>
                                <InputNumber @bind-Value="PesoTotal" />
                            </div>
                        </div>
                    </div>
                </div>

                @*Producido*@
                <div class="card">
                    <div class="card-header">
                        <h3>Producido</h3>
                    </div>
                    <div class="card-body">
                        <div class="input-group d-flex align-items-end">
                            <div class="flex-fill mx-2">
                                <label>Producto</label>
                                <InputText class="form-control" @bind-Value="entradaEmpaqueDetalle.Producto" />
                            </div>
                            <div class="flex-fill mx-2">
                                <label>Cantidad</label>
                                <InputNumber @bind-Value="entradaEmpaqueDetalle.CantidadProducido"
                                    class="form-control" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    @*Botones de Empacado*@
                    <div class="form-group text-center" display: inline-block>
                        <button type="button" class="btn btn-lg btn-primary oi oi-plus" @onclick="Nuevo">Nuevo</button>
                        <button type="submit" class="btn btn-lg btn-success oi oi-media-stop">Guardar</button>
                        <button type="button" class="btn btn-lg btn-danger oi oi-trash"
                            @onclick="Eliminar">Eliminar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code
{
    [Parameter]
    public int Id { get; set; }

    public EntradasEmpacados entradasEmpacados = new EntradasEmpacados();
    public Productos productos = new Productos();
    public EntradaEmpaqueDetalle entradaEmpaqueDetalle = new EntradaEmpaqueDetalle();

    public List<EntradasEmpacados> listaEE = new List<EntradasEmpacados>();
    public List<EntradaEmpaqueDetalle> ListaED = new List<EntradaEmpaqueDetalle>();
    public List<Productos> lista = new List<Productos>();

    [Inject]
    public ProductosBBL productoBBL { get; set; }
    [Inject]
    public EntradaEmpacadosBBL entradaEmpacadosbbl { get; set; }


    public int productoid { get; set; }
    public bool Pasar { get; set; } = false;
    public int PesoTotal { get; set; }
    public int PesoPorExistencia { get; set; }
    public int Count { get; set; }
    public int IdEmpaqueTemp { get; set; }

    protected override void OnInitialized()
    {
        entradasEmpacados.IdEmpacado = Id;
        lista = productoBBL.GetList(c => true);
        Buscar();
    }

    public void Limpiar()
    {
        entradasEmpacados = new EntradasEmpacados();
        entradaEmpaqueDetalle = new EntradaEmpaqueDetalle();
        Pasar = false;
    }
    public void Nuevo()
    {
        Limpiar();
    }

    public void Buscar()
    {
        if (this.entradasEmpacados.IdEmpacado > 0)
        {
            EntradasEmpacados encontrado = entradaEmpacadosbbl.Buscar(this.entradasEmpacados.IdEmpacado);
            if (encontrado != null)
            {
                this.entradasEmpacados = encontrado;
                toastService.ShowSuccess("A sido encontrado producto con exitos ");
            }
            else
            {
                toastService.ShowSuccess("A sido encontrado producto con exitos ");
            }
        }
    }

    public void Agregar()
    {
        Productos encontrado = productoBBL.Buscar(this.productos.ProductoId);
        
        if (encontrado != null)
        {
            this.productos = encontrado;
            productoid =  productos.ProductoId;
            CalcularInventario();
            CalcularPeso();
            CalcularExistencia();
            PesoTotalProducto();
            entradaEmpaqueDetalle.CantidadProducido = entradasEmpacados.CantidadUtilizado;
            entradaEmpaqueDetalle.CantidadProducido += entradasEmpacados.CantidadUtilizado;
            Count = Count + 1;
            if (Count >= 2)
            {
                entradaEmpaqueDetalle.Producto = "Mixto";
            }
            else
            {
                entradaEmpaqueDetalle.Producto = productos.Descripcion;
            }
            this.entradasEmpacados.EntradaEmpaqueDetalle.Add(entradaEmpaqueDetalle);
            Pasar = true;
            lista = productoBBL.GetList(p => true);


        }
    }
    public void CalcularExistencia()
    {
        productos.Existencia -= entradasEmpacados.CantidadUtilizado;
    }
    public void CalcularInventario()
    {
        productos.ValorInventario = productos.Costo * productos.Existencia;
    }

    public void PesoTotalProducto()
    {
        PesoTotal += entradasEmpacados.CantidadUtilizado * PesoPorExistencia;
    }

    public void CalcularPeso()
    {
        PesoPorExistencia =  productos.Peso / productos.Existencia;
        productos.Peso -= PesoPorExistencia;
    }

    private void RemoverFila(Productos item)
    {
        this.lista.Remove(item);
        toastService.ShowSuccess("Se a removido correctamente");
    }

    private void Guardar()
    {
        Productos encontrado = productoBBL.Buscar(this.productos.ProductoId);
        if (!entradaEmpacadosbbl.Existe(entradasEmpacados.IdEmpacado))
        { 
            this.productos = encontrado;
            entradasEmpacados.PesoEmpaquetado = PesoTotal;
            entradasEmpacados.ProductoEmpaquetado =  entradaEmpaqueDetalle.Producto;
            entradaEmpacadosbbl.Guardar(entradasEmpacados);
           productoBBL.Modificar(productos);
            Limpiar();
            toastService.ShowSuccess(" Se a Guardado correctamente ");
        }
        else
        {
            toastService.ShowSuccess("No se puede repetir el Id");
        }
    }

    public void RecuperarExistido()
    {
        productos.Existencia += entradasEmpacados.CantidadUtilizado;
    }

    public void Eliminar()
    {
        
        bool eliminado;
        Productos encontrado = productoBBL.Buscar(this.productos.ProductoId);
        RecuperarExistido();
        eliminado = entradaEmpacadosbbl.Eliminar(entradasEmpacados.IdEmpacado);
        if (eliminado)
        {
            Limpiar();
            toastService.ShowSuccess("Eliminación exitosa");
        }
        else
        {
            toastService.ShowSuccess("No se pudo eliminar con exito");
        }
    }
}